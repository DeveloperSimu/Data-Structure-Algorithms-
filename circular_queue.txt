//Circular Queue 
#include <stdio.h>
#include <conio.h>

#define MAX 5 
int queue[MAX];
int front = -1, rear = -1;

void insert(void);
int delete_element(void);
int peek(void);
void display(void);

int main() 
{
    int option, val;
    do 
    {
        printf("\n\n ** MAIN MENU **");
        printf("\n 1. Insert an element");
        printf("\n 2. Delete an element");
        printf("\n 3. Peek");
        printf("\n 4. Display the queue");
        printf("\n 5. Exit");
        printf("\n Enter your option: ");
        scanf("%d", &option);
        switch(option) 
        {
            case 1:
                insert();
                break;
            case 2:
                val = delete_element();
                if (val != -1)
                    printf("\n The number deleted is: %d", val);
                break;
            case 3:
                val = peek();
                if (val != -1)
                    printf("\n The first value in the queue is: %d", val);
                break;
            case 4:
                display();
                break;
        }
    } while(option != 5);
    getch();
    return 0;
}

void insert()
 {
    int num;
    printf("\n Enter the number to be inserted in the queue: ");
    scanf("%d", &num);
    if ((front == 0 && rear == MAX-1) || (rear + 1) % MAX == front)
     {
        printf("\n OVERFLOW");
    }
     else if (front == -1 && rear == -1)
      {
        front = rear = 0;
        queue[rear] = num;
    }
     else if (rear == MAX-1 && front != 0)
      {
        rear = 0;
        queue[rear] = num;
    }
     else
      {
        rear = (rear + 1) % MAX;
        queue[rear] = num;
    }
}

int delete_element()
 {
    int val;
    if (front == -1)
     {
        printf("\n UNDERFLOW");
        return -1;
    }
    val = queue[front];
    if (front == rear) 
    {
        front = rear = -1; 
    } 
    else
     {
        front = (front + 1) % MAX;
    }
    return val;
}

int peek() 
{
    if (front == -1)
     {
        printf("\n QUEUE IS EMPTY");
        return -1;
    } 
    else
     {
        return queue[front];
    }
}

void display()
 {
    int i;
    if (front == -1)
     {
        printf("\n QUEUE IS EMPTY");
    } 
    else 
    {
        printf("\n Queue elements are: ");
        if (rear >= front)
         {
            for (i = front; i <= rear; i++)
                printf("\t%d", queue[i]);
        } 
        else 
        {
            for (i = front; i < MAX; i++)
                printf("\t%d", queue[i]);
            for (i = 0; i <= rear; i++)
                printf("\t%d", queue[i]);
        }
    }
}

 Output :

** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 11


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 22


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

Enter the number to be inserted in the queue: 33


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 44


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 55


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
Enter your option: 1

 Enter the number to be inserted in the queue: 66

 OVERFLOW

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 Queue elements are:    11   22    33    44    55

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

The number deleted is: 11

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 22

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 33

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 Queue elements are:    44      55

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 66


 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 Queue elements are:    44     55    66

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 3

 The first value in the queue is: 44

** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 77

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 Queue elements are:    44      55      66      77

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 88

** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 1

 Enter the number to be inserted in the queue: 99

 OVERFLOW

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 Queue elements are:    44    55    66   77    88

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 44

** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 55

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 66

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2
The number deleted is: 77

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 The number deleted is: 88

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 2

 UNDERFLOW

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 4

 QUEUE IS EMPTY

** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: 3

 QUEUE IS EMPTY

 ** MAIN MENU **
 1. Insert an element
 2. Delete an element
 3. Peek
 4. Display the queue
 5. Exit
 Enter your option: